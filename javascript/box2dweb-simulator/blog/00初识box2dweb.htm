<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <div>
        <p>
            <a href="http://code.google.com/p/box2dweb/">box2dweb</a>是box2d的javascript版本,在网上还能找到另外一个box2d的javascript版本,但是只有这个版本相对比较新,详情可以去
            <a href="http://code.google.com/p/box2dweb/">box2dweb</a>查看</p>
        <h4>
            第一次尝试</h4>
        <p>
            <span>首先要引用box2dweb的js文件</span><br />
        </p>
        <div class="cnblogs_code">
            <pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span>
<span style="color: #ff0000;">src</span><span style="color: #0000ff;">="http://files.cnblogs.com/mytree/Box2dWeb-2.1.a.3.js"</span><span
    style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text/javascript"</span><span
        style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">script</span><span
            style="color: #0000ff;">&gt;</span></pre>
        </div>
        <p>
            还需要引用一个animate文件</p>
        <div class="cnblogs_code">
            <pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span>
<span style="color: #ff0000;">src</span><span style="color: #0000ff;">="http://files.cnblogs.com/mytree/javascript-animate.js"</span><span
    style="color: #ff0000;"> type</span><span style="color: #0000ff;">="text/javascript"</span><span
        style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">script</span><span
            style="color: #0000ff;">&gt;</span></pre>
        </div>
        <p>
            实现代码</p>
        <div class="cnblogs_code">
            <pre><span style="color: #0000ff;">var</span> canvas = document.getElementById("canvas"<span
                style="color: #000000;">); </span><span style="color: #0000ff;">if</span><span style="color: #000000;">
                    (canvas.getContext) { </span><span style="color: #0000ff;">var</span> ctx = canvas.getContext("2d"<span
                        style="color: #000000;">); </span><span style="color: #0000ff;">var</span> world = <span
                            style="color: #0000ff;">new</span> Box2D.Dynamics.b2World(<span style="color: #0000ff;">new</span> Box2D.Common.Math.b2Vec2(0, 10), <span
                                style="color: #0000ff;">true</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">var</span> debugdraw = <span style="color: #0000ff;">new</span><span
    style="color: #000000;"> Box2D.Dynamics.b2DebugDraw(); debugdraw.SetSprite(ctx);
    debugdraw.SetAlpha(</span>0.5<span style="color: #000000;">); debugdraw.SetFlags(Box2D.Dynamics.b2DebugDraw.e_shapeBit
    </span>|<span style="color: #000000;">Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit);
        debugdraw.SetDrawScale(</span>30<span style="color: #000000;">); world.SetDebugDraw(debugdraw);
        </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> update()
            { world.Step(</span>1 / 60, 10, 8<span style="color: #000000;">); world.DrawDebugData();
                world.ClearForces(); requestAnimationFrame(update); } </span><span style="color: #0000ff;">
                    var</span> bodyDef = <span style="color: #0000ff;">new</span><span style="color: #000000;">
                        Box2D.Dynamics.b2BodyDef(); bodyDef.type </span>=<span style="color: #000000;">Box2D.Dynamics.b2Body.b2_dynamicBody;
                            bodyDef.position.Set(</span>200 / 30, 0<span style="color: #000000;">);
</span><span style="color: #0000ff;">var</span> fixDef = <span style="color: #0000ff;">new</span><span
    style="color: #000000;"> Box2D.Dynamics.b2FixtureDef(); fixDef.density </span>= 1<span
        style="color: #000000;">; fixDef.friction </span>= 0.5<span style="color: #000000;">
            ; fixDef.restitution </span>= 0.2<span style="color: #000000;">; fixDef.shape </span>=
<span style="color: #0000ff;">new</span> Box2D.Collision.Shapes.b2CircleShape(10 / 30<span
    style="color: #000000;">); world.CreateBody(bodyDef).CreateFixture(fixDef); bodyDef.type
</span>=<span style="color: #000000;">Box2D.Dynamics.b2Body.b2_staticBody; bodyDef.position.Set(</span>200 / 30, 295 / 30<span
    style="color: #000000;">); fixDef.shape </span>= <span style="color: #0000ff;">new</span><span
        style="color: #000000;"> Box2D.Collision.Shapes.b2PolygonShape(); fixDef.shape.SetAsBox(</span>200 / 30, 5 / 30<span
            style="color: #000000;">); world.CreateBody(bodyDef).CreateFixture(fixDef); update();
            }</span></pre>
        </div>
        <p>
            &nbsp;</p>
        <h4>
            运行效果</h4>
        <p>
            <span style="color: #ff0000;">注意:需要支持canvas的浏览器才能看到效果</span>
            <br />
            <canvas id="canvas" width="400" height="300" style="background-color: silver;">你的浏览器不支持canvas,请使用支持html5或者canvas的浏览器进行访问</canvas>
            <br />
            <input type="button" value="停止" onclick="stop()" /><input type="button" value="重新开始"
                onclick="init();update();" />
        </p>
        <p>

            <script src="http://files.cnblogs.com/mytree/Box2dWeb-2.1.a.3.js" type="text/javascript"></script>

            <script src="http://files.cnblogs.com/mytree/javascript-animate.js" type="text/javascript"></script>

            <script type="text/javascript">
                var canvas = document.getElementById("canvas");
                if (canvas.getContext) {
                    var ctx = canvas.getContext("2d");
                    var world;
                    var debugdraw;
                    var timer = null;
                    function init() {
                        stop();
                        world = new Box2D.Dynamics.b2World(new Box2D.Common.Math.b2Vec2(0, 10), true);
                        debugdraw = new Box2D.Dynamics.b2DebugDraw();
                        debugdraw.SetSprite(ctx);
                        debugdraw.SetAlpha(0.5);
                        debugdraw.SetFlags(Box2D.Dynamics.b2DebugDraw.e_shapeBit
                          | Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit);
                        debugdraw.SetDrawScale(30);
                        world.SetDebugDraw(debugdraw);
                        var bodyDef = new Box2D.Dynamics.b2BodyDef();
                        bodyDef.type = Box2D.Dynamics.b2Body.b2_dynamicBody;
                        bodyDef.position.Set(200 / 30, 0);
                        var fixDef = new Box2D.Dynamics.b2FixtureDef();
                        fixDef.density = 1;
                        fixDef.friction = 0.5;
                        fixDef.restitution = 0.2;
                        fixDef.shape = new Box2D.Collision.Shapes.b2CircleShape(10 / 30);
                        world.CreateBody(bodyDef).CreateFixture(fixDef);
                        bodyDef.type = Box2D.Dynamics.b2Body.b2_staticBody;
                        bodyDef.position.Set(200 / 30, 295 / 30);
                        fixDef.shape = new Box2D.Collision.Shapes.b2PolygonShape();
                        fixDef.shape.SetAsBox(200 / 30, 5 / 30);
                        world.CreateBody(bodyDef).CreateFixture(fixDef);
                    }

                    function update() {
                        world.Step(1 / 60, 10, 8);
                        world.DrawDebugData();
                        world.ClearForces();
                        timer = requestAnimationFrame(update);
                    }
                    function stop() {
                        if (timer) {
                            cancelRequestAnimationFrame(timer);
                        }
                    }

                    init();
                    update();
                }
            </script>

        </p>
    </div>
</body>
</html>
